name: Vote Docker Image Management
'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Check out the repo content
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: '${{ secrets.DOCKERHUB_USERNAME }}'
          password: '${{ secrets.DOCKERHUB_TOKEN }}'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: bretfisher/docker-ci-automation
          flavor: |
            latest=false
          tags: |
            type=raw,value=04
            type=raw,value=latest,enable=${{ endsWith(github.ref, 'refs/heads/main') }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            
      - name: Run Trivy for all CVEs (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'bretfisher/docker-ci-automation:latest' # Adjust this to use the correct image reference
          exit-code: 0
          format: table
      
      - name: Unit Testing in Docker
        run: |
          docker run --rm ${{ github.run_id }} npm test

      - name: Test healthcheck in Docker Compose
        run: |
          export TESTING_IMAGE="${{ github.run_id }}"
          docker-compose -f docker-compose.test.yml up --exit-code-from sut
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./vote
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/vote_app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64,linux/arm/v7
